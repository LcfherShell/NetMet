["ol .searchCenterMiddle", "h3 .title", ".compText"] #1. ol tagname . = classname, title = [title, anchor], compText = deskripsi









def get_source(url):
    """Return the source code for the provided URL. 

    Args: 
        url (string): URL of the page to scrape.

    Returns:
        response (object): HTTP response object from requests_html. 
    """

    try:
        session = HTMLSession()
        response = session.get(url)
        return response

    except requests.exceptions.RequestException as e:
        print(e)

def scrape_google(query):

    query = prams_plus(query)
    response = get_source("https://www.google.co.uk/search?q=" + query)

    links = list(response.html.absolute_links)
    google_domains = ('https://www.google.', 
                      'https://google.', 
                      'https://webcache.googleusercontent.', 
                      'http://webcache.googleusercontent.', 
                      'https://policies.google.',
                      'https://support.google.',
                      'https://maps.google.')

    for url in links[:]:
        if url.startswith(google_domains):
            links.remove(url)

    return links

def parse_results(response):
    
    css_identifier_result = ".tF2Cxc"
    css_identifier_title = "h3"
    css_identifier_link = ".yuRUbf a"
    css_identifier_text = ".VwiC3b"
    
    results = response.html.find(css_identifier_result)

    output = []
    
    for result in results:

        item = {
            'title': result.find(css_identifier_title, first=True).text,
            'link': result.find(css_identifier_link, first=True).attrs['href'],
            'text': result.find(css_identifier_text, first=True).text
        }
        
        output.append(item)
        
    return output



def go_parse_results(response, engine):
    if engine == "google":
    	css_identifier_result = ".tF2Cxc"
    	css_identifier_title = "h3"
    	css_identifier_link = ".yuRUbf a"
    	css_identifier_text = ".VwiC3b"
    elif engine == "bing":
    	css_identifier_result = ".b_algo"
    	css_identifier_title = "h2"
    	css_identifier_link = "a"
    	css_identifier_text = "p"
    else:
    	css_identifier_result = ".b_algo"
    	css_identifier_title = "h2"
    	css_identifier_link = "a"
    	css_identifier_text = "p"
	    
	    
	    
    results = response.html.find(css_identifier_result)

    output = []
    
    for result in results:

        item = {
            'title': result.find(css_identifier_title, first=True).text,
            'link': result.find(css_identifier_link, first=True).attrs['href'],
            'text': result.find(css_identifier_text, first=True).text
        }
        
        output.append(item)
        
    return output
